@model MapRover.Models.ViewModels.MapInformation
@{
    ViewBag.Title = "Index";
}
<link rel="stylesheet" type="text/css" href="Content/CheckBox.css">
<script>
    $(document).ready(function () { $("#citiesSelect").select2(); });
</script>

@section RightBar {
    <h3>I am here:</h3>
    <br />
    <select id="citiesSelect" style="margin-bottom: 15px;">
        @foreach (var City in Model.Cities.OrderBy(c => c.Name))
        {
            <option value="@City.CityId">@City.Name</option>
        }
    </select>
    <h3 style="position: absolute; left: 885px; top: 250px">Choose the distance of destination:</h3>
    <script>
        var currentCity = -1, currentCountry = -1;
        var distances = {};
        var neighbours = {};
        var cityCountry = {};
        var cities = {};
        var showOnlyForeignCountries = false;
        var hideNeighbours = false;

        function showVisibleMarkers(minRange, maxRange) {
            currentCountry = cityCountry[currentCity];
            hideAllMarkers();
            showMarkersForCity(currentCity);
            showMarkersForRange(minRange, maxRange);
        }

        function showMarkersForRange(minRange, maxRange) {
            for(var i = 0; i < distances[currentCity].length; i++) {
                var distance = distances[currentCity][i].distance;

                if (distance >= minRange && distance <= maxRange && considerFurtherChecks(distances[currentCity][i].target)) {
                    showMarkersForCity(distances[currentCity][i].target);
                }
            }
        }

        function considerFurtherChecks(city) {
            var country = cityCountry[city];

            if (showOnlyForeignCountries) {
                if (currentCountry == country)
                    return false;
            }

            if (hideNeighbours) {
                if (neighbours[currentCountry].indexOf(country) >= 0)
                    return false;
            }

            return true;
        }

        function displayAdditionalInfoForCity(city) {
            $('#cityName').text(cities[city].name);
            $('#citySize').text(cities[city].size);
            $('#cityPopulation').text(cities[city].population);
            $('#cityCurrency').text(cities[city].currency);
            $('#cityBreadPrice').text(cities[city].breadPrice);
            $('#cityMilkPrice').text(cities[city].milkPrice);
            $('#cityDescription').text(cities[city].description);
            $('#cityPicture').css({ "background-image": cities[city].img_src });
        }

        $(function () {
            @foreach (var city in Model.Cities)
            {
                var culture = System.Globalization.CultureInfo.InvariantCulture;
                <text>
            distances[@city.CityId] = [];
            neighbours[@city.CityId] = [];
            cityCountry[@city.CityId] = @city.CountryId;
            cities[@city.CityId] = { name: '@city.Name', description: '@city.Description', size: @city.Size.ToString(culture), population: @city.Population, img_src: "@city.Picture", currency: '@city.CityCurrency',breadPrice: @city.BreadPrice.ToString(culture), milkPrice: @city.MilkPrice.ToString(culture)};
            </text>
            }
            @foreach (var distance in Model.Distances)
            {
                var culture = System.Globalization.CultureInfo.InvariantCulture;
                <text>distances[@distance.CityA.CityId].push({ target: @distance.CityB.CityId, distance: @distance.Value.ToString(culture) });</text>
            }
            @foreach (var neighbour in Model.NeighbourCountries)
            {
                <text>neighbours[@neighbour.IdCountryA].push(@neighbour.IdCountryB);</text>
            }

            $("#slider-range").slider({
                range: true,
                min: 0,
                max: 6000,
                step:100,
                values: [1000, 4000],
                slide: function (event, ui) {
                    $("#amount").val(ui.values[0] + " km" + " - " + ui.values[1] + " km");
                    showVisibleMarkers(ui.values[0], ui.values[1]);
                }
            });
            $("#amount").val($("#slider-range").slider("values", 0) + " km" +
                " - " + $("#slider-range").slider("values", 1) + " km");
            currentCity = $('#citiesSelect').val();
            showVisibleMarkers($("#slider-range").slider("values", 0), $("#slider-range").slider("values", 1));

            $('#chkOnlyForeignCountries').click(function() {
                showOnlyForeignCountries = this.checked;
                showVisibleMarkers($("#slider-range").slider("values", 0), $("#slider-range").slider("values", 1));
            });

            $('#chkHideNeighbours').click(function() {
                hideNeighbours = this.checked;
                showVisibleMarkers($("#slider-range").slider("values", 0), $("#slider-range").slider("values", 1));
            });
        });
    </script>

    <p>
        <input type="text" id="amount" style="border: 0; color: #403b3b; position: absolute; top: 290px; margin-left: 700px; left: 225px" />
    </p>

    <div id="slider-range" style="position: absolute; top: 340px; left: 880px"></div>

    <div id="sizer" style="position: absolute; top: 410px; left: 870px; text-align: left;">
        <form action="#" method="get" accept-charset="utf-8">
            <fieldset class="checkboxes">
                <label class="label_check" for="chkOnlyForeignCountries" style="color: #c8c8c8;">
                    <input name="chkOnlyForeignCountries" id="chkOnlyForeignCountries" value="1" type="checkbox" />Hide other places in my current country</label>
                <label class="label_check" for="chkHideNeighbours" style="color: #c8c8c8;">
                    <input name="chkHideNeighbours" id="chkHideNeighbours" value="1" type="checkbox">
                    Hide neighbour countries</label>
            </fieldset>
        </form>
        <h4><img src="Content/themes/base/images/CircleSmall1.png" />Red circles describe airport passenger load in the year 2011</h4>
    </div>
}

<hgroup class="title">
    <h3></h3>
</hgroup>
<div id="capslide_img_cont11" class="ic_container">
    @Html.Partial("~/Views/Shared/MapControl.cshtml", Model.Airports)
    <div class="ic_caption">
        <button id="slideButton" type="button" style="position: absolute; right: 0px; top: 10px;">Slide</button>
        <p class="ic_category" id="cityName">Some City X</p>
        <p class="ic_image" id="cityPicture">
        </p>

        <h3>Insight of the City</h3>

        <dl class="ic_text">
            <dt>Size:</dt>
            <dd id="citySize" />
            km²
            <dt>Population:</dt>
            <dd id="cityPopulation" />
            <dt>Currency:</dt>
            <dd id="cityCurrency" />
            <dt>Bread Price:</dt>
            <dd id="breadPrice" />
            <dt>Milk Price:</dt>
            <dd id="milkPrice" />
            <dt>Description:</dt>
            <dd id="cityDescription" />
        </dl>
    </div>
</div>
<script type="text/javascript">
    $(function () {
        $("#capslide_img_cont11").capslide({
            caption_color: '#fff',
            caption_bgcolor: '#000',
            overlay_bgcolor: '#4869D6',
            border: '5px solid #000',
            showcaption: true,
            slideButton: $("#slideButton")
        });

        autoHideFutureMarkers = true;
        hideAllMarkers();

        $('#citiesSelect').change(function () {
            hideAllMarkers();
            currentCity = $('#citiesSelect').val();
            showVisibleMarkers($("#slider-range").slider("values", 0), $("#slider-range").slider("values", 1));
        });
    });
</script>

<script>
    function setupLabel() {
        if ($('.label_check input').length) {
            $('.label_check').each(function () {
                $(this).removeClass('c_on');
            });
            $('.label_check input:checked').each(function () {
                $(this).parent('label').addClass('c_on');
            });
        };
        if ($('.label_radio input').length) {
            $('.label_radio').each(function () {
                $(this).removeClass('r_on');
            });
            $('.label_radio input:checked').each(function () {
                $(this).parent('label').addClass('r_on');
            });
        };
    };
    $(document).ready(function () {
        $('body').addClass('has-js');
        $('.label_check, .label_radio').click(function () {
            setupLabel();
        });
        setupLabel();
    });
</script>